scalar MDYDate

interface Chronological {
    created: MDYDate
    updated: MDYDate

}

type Application implements Chronological {
    id: ID!
    name: String
    displayName: String
    description: String
    provisionerRole: Role
    isDeleted: Boolean
    created: MDYDate
    updated: MDYDate
    entitlements: [Entitlement]
}

type Entitlement implements Chronological {
    id: ID!
    name: String
    displayName: String
    description: String
    restricted: Boolean
    parentApplication: Application
    isDeleted: Boolean
    created: MDYDate
    updated: MDYDate
}

type Role implements Chronological {
    id: ID!
    name: String
    displayName: String
    description: String
    isDeleted: Boolean
    isRequestable: Boolean
    created: MDYDate
    updated: MDYDate
}

type Query {
    application(name: String): Application
    applications: [Application]

    entitlements: [Entitlement]

    updatedSince(since: MDYDate!): [Chronological]
}

type Mutation {
    createEntitlement(newEntitlement: EntitlementDisplayInput!): Entitlement!
    updateEntitlement(entitlementUpdates: EntitlementDisplayInput!): Entitlement!
    deleteEntitlement(parentAppName: String!, entitlementName: String!): Entitlement!
}

input EntitlementDisplayInput {
    name: String!
    displayName: String!
    description: String!
    parentAppName: String!
}